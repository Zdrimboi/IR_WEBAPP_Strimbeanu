@page "/cart"
@using IR_WEBAPP_Strimbeanu.Data
@using IR_WEBAPP_Strimbeanu.Models
@using Microsoft.AspNetCore.Identity
@using Microsoft.EntityFrameworkCore
@inject CartService CartService
@inject ApplicationDbContext DbContext
@inject UserManager<ApplicationUser> UserManager
@inject AuthenticationStateProvider AuthenticationStateProvider
@inject NavigationManager Navigation
@rendermode InteractiveServer

<h3>Your Cart</h3>

@if (cart == null || !cart.Items.Any())
{
        <p>Your cart is empty.</p>
}
else
{
        <table class="table table-bordered">
            <thead>
                <tr>
                    <th>Image</th>
                    <th>Product</th>
                    <th>Price</th>
                    <th>Quantity</th>
                    <th>Total</th>
                    <th></th>
                </tr>
            </thead>
            <tbody>
            @foreach (var item in cart.Items)
            {
                        <tr>
                            <td>
                                <img src="@item.Product.ThumbnailUrl" alt="@item.Product.Name" style="width: 60px; height: 60px; object-fit: cover;" />
                            </td>
                            <td>@item.Product.Name</td>
                            <td>@string.Format("{0:0.00}", item.Product.Price) RON</td>
                            <td>
                                <input type="number" min="1" class="form-control" @bind="item.Quantity" />
                            </td>
                            <td>@string.Format("{0:0.00}", item.Product.Price * item.Quantity) RON</td>
                            <td>
                                <button class="btn btn-sm btn-danger" @onclick="() => RemoveItem(item.Product.Id)">Remove</button>
                            </td>
                        </tr>
            }
            </tbody>
            <tfoot>
                <tr>
                    <td colspan="4" class="text-end">Total:</td>
                    <td colspan="2" class="fw-bold">@string.Format("{0:0.00}", TotalPrice) RON</td>
                </tr>
            </tfoot>
        </table>

        <div class="d-flex justify-content-end">
            <button class="btn btn-success" @onclick="Checkout">Proceed to Checkout</button>
        </div>
}

@code {
    private Cart cart;
    private decimal TotalPrice => cart?.Items.Sum(i => i.Quantity * i.Product.Price) ?? 0;

    protected override async Task OnInitializedAsync()
    {
        var authState = await AuthenticationStateProvider.GetAuthenticationStateAsync();
        var user = authState.User;

        if (user.Identity?.IsAuthenticated ?? false)
        {
            var applicationUser = await UserManager.GetUserAsync(user);
            cart = await CartService.GetCartAsync(applicationUser);
        }
    }

    private async Task RemoveItem(int productId)
    {
        var authState = await AuthenticationStateProvider.GetAuthenticationStateAsync();
        var user = authState.User;

        if (user.Identity?.IsAuthenticated ?? false)
        {
            var applicationUser = await UserManager.GetUserAsync(user);
            await CartService.RemoveFromCartAsync(applicationUser, productId);
            cart = await CartService.GetCartAsync(applicationUser);
        }
    }

    private void Checkout()
    {
        Navigation.NavigateTo("/checkout");
    }
}
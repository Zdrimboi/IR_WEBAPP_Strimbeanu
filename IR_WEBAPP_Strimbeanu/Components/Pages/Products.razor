@page "/products"
@using IR_WEBAPP_Strimbeanu.Data
@using IR_WEBAPP_Strimbeanu.Models
@using Microsoft.EntityFrameworkCore
@inject ApplicationDbContext DbContext

<h3>Products</h3>

<!-- Category Dropdown -->
<select @bind="selectedCategoryId" @bind:event="onchange" class="form-select mb-3">
    <option value="0">All Categories</option>
    @foreach (var category in categories)
    {
            <option value="@category.Id">@category.Name</option>
    }
</select>

@if (products == null)
{
        <p>Loading...</p>
}
else
{
        <div class="container">
            <div class="row">
            @foreach (var product in products)
            {
                        <div class="col-md-6 mb-4"> @* Two items per row *@
                            <div class="card">
                                <a href="/product/@product.Id">
                                    <img src="@product.ThumbnailUrl" class="card-img-top" alt="@product.Name" style="max-height: 200px; object-fit: contain;">
                                </a>
                                <div class="card-body">
                                    <h5 class="card-title">@product.Name (@product.Category?.Name)</h5>
                                    <p class="card-text">@product.ShortDescription</p>
                                    <a href="@product.PdfUrl" class="btn btn-primary" target="_blank">Download PDF</a>
                                </div>
                            </div>
                        </div>
            }
            </div>
        </div>
}

@code {
    private List<Product>? products;
    private List<Category>? categories;
    private int selectedCategoryId = 0;

    protected override void OnInitialized()
    {
        categories = DbContext.Categories.ToList();
        LoadProducts();
    }

    private void LoadProducts()
    {
        if (selectedCategoryId == 0)
        {
            products = DbContext.Products.Include(p => p.Category).ToList();
        }
        else
        {
            products = DbContext.Products
                .Where(p => p.CategoryId == selectedCategoryId)
                .Include(p => p.Category)
                .ToList();
        }
    }

    private void OnCategoryChanged()
    {
        LoadProducts();
        StateHasChanged();
    }
}
